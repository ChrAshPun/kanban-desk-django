from django.db import models
from django.conf import settings
from django.core.validators import MinLengthValidator

class Project(models.Model):
    name = models.CharField(max_length=50, validators=[MinLengthValidator(2)])
    description = models.CharField(max_length=100, blank=True)
    date_created = models.DateTimeField(auto_now_add=True)
    date_updated = models.DateTimeField(auto_now=True)
    owner = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='projects') # auto-generated by view

    def __str__(self):
        return self.name

class Task(models.Model):
    PRIORITY_CHOICES = [
        ('low', 'Low'),
        ('medium', 'Medium'),
        ('high', 'High'),
    ]
    STATUS_CHOICES = [
        ('todo', 'To Do'),
        ('in_progress', 'In Progress'),
        ('review', 'Review'),
        ('complete', 'Complete'),
    ]

    task_id = models.CharField(max_length=10) # auto-generated by view
    status =  models.CharField(choices=STATUS_CHOICES, default='todo')
    priority =  models.CharField(choices=PRIORITY_CHOICES, default='low')
    name = models.CharField(max_length=50)
    description = models.CharField(max_length=100, blank=True)
    date_created = models.DateTimeField(auto_now_add=True)
    date_updated = models.DateTimeField(auto_now=True)
    project = models.ForeignKey(Project, on_delete=models.CASCADE, related_name='tasks')

    def __str__(self):
        return self.name   


